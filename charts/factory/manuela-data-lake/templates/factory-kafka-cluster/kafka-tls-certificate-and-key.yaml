apiVersion: v1
kind: Secret
metadata:
  name: kafka-tls-certificate-and-key
  namespace: factory-lake
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURsekNDQW4rZ0F3SUJBZ0lVRGlGMzg2ajZCaThuS3pIbWF2ZG1xZTBqTnpJd0RRWUpLb1pJaHZjTkFRRUwKQlFBd1d6RUxNQWtHQTFVRUJoTUNSRVV4RURBT0JnTlZCQXNNQjAxaGJuVmxiR0V4T2pBNEJnTlZCQU1NTVNvdQpZWEJ3Y3k1bFpHZGxMVzFuYlhRdGFIVmlMbWRqY0M1a1pYWmpiSFZ6ZEdWeUxtOXdaVzV6YUdsbWRDNWpiMjB3CkhoY05NakF4TURBNE1UQXdPVEE1V2hjTk1qRXhNREE0TVRBd09UQTVXakJiTVFzd0NRWURWUVFHRXdKRVJURVEKTUE0R0ExVUVDd3dIVFdGdWRXVnNZVEU2TURnR0ExVUVBd3d4S2k1aGNIQnpMbVZrWjJVdGJXZHRkQzFvZFdJdQpaMk53TG1SbGRtTnNkWE4wWlhJdWIzQmxibk5vYVdaMExtTnZiVENDQVNJd0RRWUpLb1pJaHZjTkFRRUJCUUFECmdnRVBBRENDQVFvQ2dnRUJBTnpUMG9mOHZWbW9hbVNzV3lRcERmZzdUdDNZUm1JazNGQUx5bWgzeE1jalpVdVkKaTcwck1QMUJZZGxneDR1bDliUWxPMGRqMmdGR2dlcGNlMjU4NVVVRG1NQXdBTGdwZ2lvVlV0MnFBaG9ESWQzeQp0UDRmdDk3WEdlYjJTSHg2RzczMXpXYi9vWXJZN1lud1JqWjlWNC9qdEwxeWlJQ1pzalppczFwcFlpTTJ6Ym5xCkRDM1lLRm5oSFhwUlJjaGRlQ0dqVWlJaG9nRngwMlJUZUdJVFFJV2Q4a3dhV2tRWkNTYllZV0NTU09mZkRUb0QKREV4ZGgrdm1GSDhjRC8xZFExVlBuTEtLeXdSWmdOd3dhK0VySzJ0c3NEYUlmZWxqYWdrWURXczVFMVBWOGRpMApoaFBDaGM0bnhXeFJISnk0ZUlnUERwajVPZTY3WjFZSERWTFRZYTBDQXdFQUFhTlRNRkV3SFFZRFZSME9CQllFCkZGVUFCSDJBeTdhWUE0QjNaeG0xMnowV2ZiSXNNQjhHQTFVZEl3UVlNQmFBRkZVQUJIMkF5N2FZQTRCM1p4bTEKMnowV2ZiSXNNQThHQTFVZEV3RUIvd1FGTUFNQkFmOHdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBQWdWQ1FsYgpXSXo1U1N0Mm5LTno2Qnc0ZmwwbGpmQTBMSVZHR09LUTA4cGhESndSQTRORklKMkRtdjJ5YWlXWDVybXZ1UkM2CkwwTHVWTzhJTnhmWncxR05VTzFyMkhza1N0c0w2WGVoTHlnRmtpNUU0cGMwRk5wZU8zQ1ErbGJWYkg5eE8wWnYKdTdUOTdkSkg2T1BPdzM2NVBRZ0dCaXJwOHBRL3Jsbm5PajZhdi90T2orbFp2MnkrMW1welgwZmhqd2NUQTRVMAppa25JY1FnbnlORUxCT1pwMFNoWnNKNHlxdTVtdDhNMVpkazhuN2g0UWYrVWJJSm5ReW5hWUoyVWx0Q01MbXRLClJlT3o0N3Rnamg1REZ4dngvVCtWeTlLdVhESzBXS09VZi9tZ1Zzd1BFV2MzUUR0N0FRVjVZY05mMHdpUGFvaXcKSGhNcDVSY2FudmI1dEt3PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  tls.key: LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCk1JSUV2d0lCQURBTkJna3Foa2lHOXcwQkFRRUZBQVNDQktrd2dnU2xBZ0VBQW9JQkFRRGMwOUtIL0wxWnFHcGsKckZza0tRMzRPMDdkMkVaaUpOeFFDOHBvZDhUSEkyVkxtSXU5S3pEOVFXSFpZTWVMcGZXMEpUdEhZOW9CUm9IcQpYSHR1Zk9WRkE1akFNQUM0S1lJcUZWTGRxZ0lhQXlIZDhyVCtIN2ZlMXhubTlraDhlaHU5OWMxbS82R0syTzJKCjhFWTJmVmVQNDdTOWNvaUFtYkkyWXJOYWFXSWpOczI1Nmd3dDJDaFo0UjE2VVVYSVhYZ2hvMUlpSWFJQmNkTmsKVTNoaUUwQ0ZuZkpNR2xwRUdRa20yR0Zna2tqbjN3MDZBd3hNWFlmcjVoUi9IQS85WFVOVlQ1eXlpc3NFV1lEYwpNR3ZoS3l0cmJMQTJpSDNwWTJvSkdBMXJPUk5UMWZIWXRJWVR3b1hPSjhWc1VSeWN1SGlJRHc2WStUbnV1MmRXCkJ3MVMwMkd0QWdNQkFBRUNnZ0VCQUtvbWFLU3hZREN5TFBCUFFaYTJMM1ppTkYySlpJb0F2dVRLZ1BaSHVvNTYKUG5XbUg1M3RwcnlzNFRrK2NlS3ZTSWU2M0ZjZ24veTFtQ3E5Z2JuYmNFamlBWk9zS1JHOW9mYk5JV0Y4dWt2Uwp1QWl0RnpwcnRDQjIreFZVRlB3Y2xqMmpKTlpGQi9MVlBRbzQ0ZERnZVZSOGJtbyswdURNREY0TlpRYTRCbzc4Ckg3dHRWcUJYRDRjamJQVysreVB1V0tqd2kvV0pqUzliSHZlOEtTNDF4MWtiV1JtakR0Umw2Z0IwWXk5aUJiRXYKOFdBWE9uNENoSDhpTHZTVFVjZ2doUkt0R2g4L1BwRU42M1c1UHRpSzlmci9VcSs3U1E2Zkh2L0owREVrU3pwVwp0U1c4bTdBUlB0TzBidCtQbnM5TXpIT053NG0xdVVFN0JuaHgwSCszUzEwQ2dZRUE4NGMyQ3JtMTNkSUFLYzhwCjlId1BocU9OZEdieitBUUdweUxGTCsySVRZZWxuSlR0N3BvUDlmcnhNZUdTTDZocGt4UWYvY1BEOGtZUmltMW8KRHRjRkZqL1h4VjllMFBucUFRMUJDcURWUXRxQ3Vtay9pKzhVdTJnbitvNmFRVzI2dTV0VmtPWHh4NEFZSDNXWApFSUh2a0RjdzY3Y3o3aEFWaDBDTUlNU2hTWk1DZ1lFQTZDTDkrSkxGYS9HTXcvS040dTdpWTNzd2l2MWF2VVBaClltK0tvMjY3czJaRXhmalFZbkMxcWFBZDVnaVg5QXA5Q0hlSTlPMEE0L1cwR29EbUJrWGNWR00xcmI0QWRJQXUKQnhrRGdOczMyUjAydWN3NGNJMFhoWXVHVTZxMUo1elNBN0E3K2F3YTBPS2lnd3ltZWdvYmxzZVRtamZVdmw5RApNbWwyUENWR3I3OENnWUJnWWZrL2tYU3JVRHdFVUJ1WXlha1RicFBEcUNPUzIzVU9uVEpSMzc3OGdGMUpkYUFkCnVSZnNFTjk1RUgvZElOaDMvNVVSeUhNNjVnUjNOd25pSmJPN3RKVGZadm1OMS91SFl3bUUvVmFxV1BVNGRnTlMKak5NMXdPbGh2eUxLRm5XN1hxVWs3ZjBkS2xOaDBCWnowQmxTaUtWeUJWWW1PSE5zemwwbmN1c3F4UUtCZ1FERwpaZ0hDRFU4RjdyQnNXRVhFQ244YW54TGg5NTh4MjJkVHBobExqVHlIRzRUejNxL2JNcEZRcERScGdqYThzS29rCkxtV3pUMHhQaUpPaGcwRVZZMmZvQjlLODU0TGtEeGxIbjYxSzJCRm5VbnlQVjJkMWFtRU1GaTk4R280eGlPcEYKbEwzdHFaWlJxU0ZUOTkvZ3RmcldaMFJUcmh2NWlObVpvR0VaRHBMWGFRS0JnUUNxcjNub3JXZ2dSNDVjd3JXTApxYXVoSDhXVTBUS2NuWUdQTkZpNzI4VEZ3RUlVVk9Kb1JsUWNqUTVCWU1wVDNTMTY5OHE1eHZYN2huVjE3MVhkCjB3eW1qaWt1UDRBOE5ub3BRbkVxVGRGMDBORHNCRjFMTHhPYVJ1aDdPQ1pESHZhMG5FR01DRmsxZVBaanVTWnUKNVQ1ZTRlcndEMFhqTUhJYjBnZ2I5YytDMFE9PQotLS0tLUVORCBQUklWQVRFIEtFWS0tLS0tCg==

# It is beyond a bad practise to check in private keys into git repos
# there are a number of approaches to make this work, e.g. by encryption (e.g. sealedsecrets)
# or by storing a reference to a key in a key vault. 

# Since this is just a demo and this self-signed wildcard cert
# is not used beyond the kafka connectivity between mirrormaker and the kafka cluster
# which run behind a firewall we find the risk of the private key leaking to be 
# acceptable.

# This secret was created by running
# export MYDOMAIN=apps.edge-mgmt-hub.gcp.devcluster.openshift.com
# openssl req -newkey rsa:2048 -nodes -keyout key.pem -x509 -days 365 -out certificate.pem -subj "/C=DE/OU=Manuela/CN=*.${MYDOMAIN}"
# oc create secret tls kafka-tls-certificate-and-key --key key.pem --cert certificate.pem
